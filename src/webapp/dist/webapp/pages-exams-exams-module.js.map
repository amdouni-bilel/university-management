{"version":3,"sources":["./src/app/pages/exams/exams.component.ts","./src/app/pages/exams/exams.component.html","./src/app/pages/exams/exam-modal/exam-modal.component.ts","./src/app/pages/exams/exam-modal/exam-modal.component.html","./src/app/pages/exams/exams.module.ts"],"names":[],"mappings":"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","file":"pages-exams-exams-module.js","sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { concat, EMPTY, timer } from \"rxjs\";\nimport { switchMapTo } from \"rxjs/operators\";\nimport { UpdateExamRequest, User } from 'src/app/core/models';\nimport { ExamService, ExcelService, TokenService } from 'src/app/core/services';\nimport { ActionEnum } from 'src/app/shared/components/cm-table-container/models/config-column.model';\nimport { DataValue } from 'src/app/shared/components/cm-table-container/models/data-value.model';\nimport { RemovePopupComponent } from 'src/app/shared/components/comfirmation-popup/remove/remove-popup.component';\nimport { ExamModalComponent } from './exam-modal/exam-modal.component';\n\n@Component({\n    templateUrl: './exams.component.html',\n    styleUrls: ['./exams.component.scss'],\n    providers: [DatePipe]\n})\nexport class ExamsComponent implements OnInit {\n\n    @ViewChild('content')\n    private teacherG: ElementRef;\n\n    @ViewChild('content1')\n    private roomG: ElementRef;\n\n    public isStudent: boolean;\n    public isTeacher: boolean;\n\n    public teachers: any;\n\n    public rooms: any;\n\n    constructor(private modalService: NgbModal,\n        private spinner: NgxSpinnerService,\n        private excelService: ExcelService,\n        private tokenService: TokenService,\n        private examService: ExamService) {\n    }\n\n    ngOnInit() {\n        this.spinner.show();\n        this.examService.getExams().subscribe(exams => {\n            this.initExmasColomns(this.initTable(exams));\n            this.tokenService.getProfile().then((user: User) => {\n                this.spinner.hide();\n                this.isStudent = user.roles.includes(\"STUDENT\");\n                this.isTeacher = user.roles.includes(\"TEACHER\");\n                if (this.isStudent === false && this.isTeacher === false) {\n                } else {\n                }\n            });\n        });\n    }\n\n    private initTable(exams): any[] {\n        let result: any[] = [];\n        if (exams && exams.length > 0) {\n            exams.forEach(exam => {\n                if (exam.classes && exam.classes.length > 0) {\n                    exam.classes.forEach(element => {\n                        let session: string;\n                        if (exam.session === \"S1P1\" || exam.session === \"S2P1\") {\n                            session = \"DS\"\n                        } else if (exam.session === \"S1P2\" || exam.session === \"S2P2\" || exam.session === \"SP\") {\n                            session = \"Examen\"\n                        } else if (exam.session === \"SR\") {\n                            session = \"Rattrapage\"\n                        }\n                        result.push({\n                            examId : exam.examId,\n                            session: session,\n                            sessionT: exam.session,\n                            class: element.classId,\n                            classC: element,\n                            examDate: element.examDate,\n                            typeExam: element.typeExam,\n                            examHour: element.examHour.toString().substring(0, 2) + \"H:\" + element.examHour.toString().substring(2, 4),\n                            examDuration: element.examDuration + \" min\",\n                            module: element.module.designation,\n                            moduleI: element.module.moduleId,\n                            teachersId: element.teachers.map(teacher => teacher.teacherId),\n                            teachersNames: element.teachers.map(teacher => teacher.fullName),\n                            teachers: element.teachers.map(teacher => teacher.fullName).length,\n                            rooms: element.rooms.map(room => room.classRoomId).length,\n                            roomsNames: element.rooms.map(room => room.classRoomId),\n                            teachersC: element.teachers,\n                            roomsC: element.rooms\n                        });\n                    });\n                }\n            })\n        }\n        return result;\n    }\n\n    public openModal() {\n        const modal: NgbModalRef = this.initPopUpCrud(ExamModalComponent);\n        modal.componentInstance.triggerSave.subscribe((dataValue: DataValue) => {\n            this.spinner.show();\n            if (dataValue.action === ActionEnum.CREATE) {\n                concat(\n                    this.examService.addExam(dataValue.value).pipe(switchMapTo(EMPTY)),\n                    timer(1000).pipe(switchMapTo(EMPTY)),\n                    this.examService.getExams()\n                ).subscribe((exams: any[]) => {\n                    this.spinner.hide();\n                    modal.componentInstance.setIsSaved({ isSaved: true });\n                }, error => {\n                    this.spinner.hide();\n                    if (error.error.code) {\n                        modal.componentInstance.setIsSaved({ isSaved: false, code: error.error.code });\n                    }\n                })\n            }\n        });\n    }\n\n    public getArrayForm(event: DataValue) {\n        if (event.action === ActionEnum.DELETE) {\n            const modal: NgbModalRef = this.initPopUp(RemovePopupComponent);\n            modal.componentInstance.config = { title: \"Confirmation de suppression\", message: \"Est-ce que vous confirmez la suppression définitive ?\" };\n            modal.componentInstance.sendData.subscribe((data: boolean) => data ? this.deleteClass((event.value)) : null);\n        } else if (event.action === ActionEnum.UPDATE) {\n            const modal: NgbModalRef = this.initPopUpCrud(ExamModalComponent);\n            modal.componentInstance.editExam = event.value;\n            modal.componentInstance.triggerSave.subscribe((dataValue: DataValue) => {\n                this.spinner.show();\n                if (dataValue.action === ActionEnum.UPDATE) {\n                    concat(\n                        this.examService.updateExam(dataValue.value as UpdateExamRequest).pipe(switchMapTo(EMPTY)),\n                        timer(1000).pipe(switchMapTo(EMPTY)),\n                        this.examService.getExams()\n                    ).subscribe((exams: any[]) => {\n                        this.spinner.hide();\n                        modal.componentInstance.setIsSaved({ isSaved: true });\n                    }, error => {\n                        this.spinner.hide();\n                        if (error.error.code === 701) {\n                            modal.componentInstance.setIsSaved({ isSaved: false, code: error.error.code });\n                        }\n                    })\n                }\n            });\n        } else {\n            this.teachers = null;\n            this.rooms = null;\n            /*if (event.field === \"teachers\") {\n                if (this.isOdd(event.value.teachers) === 0) {\n                    let nt = event.value.teachers / 2;\n                    let ft = event.value.teachersNames.slice(0, nt);\n                    let lt = event.value.teachersNames.slice(nt, nt * 2);\n                    this.teachers = { g1: ft, g2: lt };\n                } else {\n                    let nt = Math.trunc(event.value.teachers / 2);\n                    let ft = event.value.teachersNames.slice(0, nt);\n                    let lt = event.value.teachersNames.slice(nt, nt * 2);\n                    lt.push(event.value.teachersNames[event.value.teachers - 1]);\n                    this.teachers = { g1: ft, g2: lt };\n                }\n                this.modalService.open(this.teacherG,\n                    {\n                        size: 'lg',\n                        ariaLabelledBy: 'modal-basic-title',\n                        keyboard: false,\n                        backdrop: 'static',\n                        centered: true\n                    })\n            } else {\n                if (this.isOdd(event.value.rooms) === 0) {\n                    let nr = event.value.rooms / 2;\n                    let fr = event.value.roomsNames.slice(0, nr);\n                    let lr = event.value.roomsNames.slice(nr, nr * 2);\n                    this.rooms = { g1: fr, g2: lr };\n                } else {\n                    let nr = Math.trunc(event.value.rooms / 2);\n                    let fr = event.value.roomsNames.slice(0, nr);\n                    let lr = event.value.roomsNames.slice(nr, nr * 2);\n                    lr.push(event.value.roomsNames[event.value.rooms - 1]);\n                    this.rooms = { g1: fr, g2: lr };\n                }\n                this.modalService.open(this.roomG,\n                    {\n                        size: 'lg',\n                        ariaLabelledBy: 'modal-basic-title',\n                        keyboard: false,\n                        backdrop: 'static',\n                        centered: true\n                    })\n            }*/\n        }\n    }\n\n    private isOdd(num) { return num % 2; }\n\n    private deleteClass(event): void {\n        this.spinner.show();\n        concat(\n            this.examService.deleteExam({ examId: event.examId, teacherIds: event.teachersId, roomIds: event.roomsNames, classe: event.class }).pipe(switchMapTo(EMPTY)),\n            timer(1000).pipe(switchMapTo(EMPTY)),\n            this.examService.getExams()\n        ).subscribe((exams: any[]) => {\n            this.spinner.hide();\n            this.modalService.dismissAll();\n        })\n    }\n\n    private initPopUp(content: any): NgbModalRef {\n        return this.modalService.open(content,\n            {\n                size: 'xl',\n                ariaLabelledBy: 'modal-basic-title',\n                keyboard: false,\n                backdrop: 'static',\n                centered: true\n            });\n    }\n\n    private initPopUpCrud(content: any): NgbModalRef {\n        return this.modalService.open(content,\n            {\n                size: 'xl',\n                ariaLabelledBy: 'modal-basic-title',\n                keyboard: false,\n                backdrop: 'static',\n                centered: true\n            });\n    }\n\n    public export() {\n        this.examService.getExams().subscribe(exams => this.excelService.exportAsExcelFile(exams));\n    }\n\n    private initExmasColomns(result): void {\n   \n    }\n}","<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#ccb581\" type=\"ball-circus\" [fullScreen]=\"true\">\n    <p class=\"color-white\"> Loading... </p>\n</ngx-spinner>\n\n<div class=\"card\" *ngIf=\"isTeacher\">\n    <div class=\"card-header\">\n       \n    </div>\n</div>\n\n<div class=\"row bg-white\" style=\"box-shadow: 10px 5px 5px #e6e6e6;\">\n    <div class=\"col-12\">\n\n        <div class=\"row border-bottom\">\n            <div class=\"col-12\">\n                <div class=\"search-criteria\">\n\n                    <div class=\"py-2\">\n                        <div class=\"float-left\">\n                            <p class=\"bold color-title font-size-20 mb-0\">Liste des épreuves</p>\n                        </div>\n                        <div class=\"dropdown float-right\">\n                            <button *ngIf=\"!isStudent && !isTeacher\" type=\"button\"\n                                class=\"btn btn-bg-add font-size-12 btn-add mb-0 color-white\" (click)=\"openModal()\">\n                                <span class=\"pl-1\">Nouveau</span>\n                            </button>\n                            <span ngbTooltip=\"Rechercher\">\n                                <a>\n                                    <i class=\"icon-search icons mx-2 my-1\"></i>\n                                </a>\n                            </span>\n                            <span ngbTooltip=\"Télécharger\">\n                                <a (click)=\"export()\">\n                                    <i class=\"icon-download icons mx-2 my-1\"></i>\n                                </a>\n                            </span>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                    </div>\n\n                    <div class=\"accordion mb-0\" role=\"tablist\" aria-multiselectable=\"true\">\n                        <div class=\"card card-search\">\n                            <div id=\"search-criteria-one\" class=\"border-top collapse\" role=\"tabpanel\"\n                                aria-labelledby=\"headingOne\">\n                                <div class=\"card-block bg-white py-4\" style=\"overflow: visible;\">\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-12 mb-4 px-0\">\n          \n        </div>\n\n    </div>\n</div>","import { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable, timer } from 'rxjs';\nimport { Exam, CreateExamRequest, UpdateExamRequest, Classs, Module, SemesterEnum, ExamTypeEnum, DsexEnum, SessionEnum, Room, SpecificUserResponse } from 'src/app/core/models';\nimport { Teacher } from 'src/app/core/models/teacher.model';\nimport { ClassService, ModuleService, IAMService, RoomService, RefService, TeacherService } from 'src/app/core/services';\nimport { ActionEnum } from 'src/app/shared/components/cm-table-container/models/config-column.model';\nimport { DataValue } from 'src/app/shared/components/cm-table-container/models/data-value.model';\nimport { TSMap } from 'typescript-map';\n\n@Component({\n    templateUrl: './exam-modal.component.html',\n    styleUrls: ['./exam-modal.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DatePipe]\n})\nexport class ExamModalComponent implements OnInit {\n\n    @Output()\n    public triggerSave: EventEmitter<DataValue> = new EventEmitter();\n\n    @Input()\n    public editExam: any;\n\n    public form: FormGroup;\n\n    public endHourExam: string;\n    public saveError: string;\n    public saveSuccess: string;\n\n    public dsex: string[];\n    public examTypes: string[];\n    public semesters: string[];\n    public sessions: any[];\n\n    public levels: any[];\n\n    public disabled: boolean = true;\n    public disabledRoom: boolean = true;\n    public disabledTeacher: boolean = true;\n\n    public disabledClass: boolean = true;\n    public showLoaderError: boolean = false;\n    public showLoaderSuccess: boolean = false;\n    public inProgress: boolean = false;\n\n    public groupValueFn;\n\n    public rooms: Room[];\n    public teachers: Teacher[];\n\n    public department$: Observable<any[]>;\n    public blocs$: Observable<any[]>;\n\n    public classes: Classs[] = [];\n    public classesBuffer: Classs[] = [];\n    public loadingClasses = false;\n\n    public modules: Module[] = [];\n    public modulesBuffer: Module[] = [];\n    public loadingModules = false;\n\n    public totalItemsModule: number;\n\n    public selectedClassesLenght: number;\n    public bufferSize = 10;\n    public numberOfItemsFromEndBeforeFetchingMore = 10;\n\n    constructor(private fb: FormBuilder,\n        private activeModal: NgbActiveModal,\n        private classService: ClassService,\n        private spinner: NgxSpinnerService,\n        private refService: RefService,\n        private datePipe: DatePipe,\n        private moduleService: ModuleService,\n        private roomService: RoomService,\n        private teacherService: TeacherService) {\n    }\n\n    ngOnInit() {\n        this.initForm();\n        this.department$ = this.refService.getDepartements();\n        this.blocs$ = this.refService.getBlocs();\n        this.refService.getLevels().subscribe(levels => {\n            this.levels = levels;\n            let sessions: any[] = [];\n            this.levels.forEach(level => sessions.push(level.session));\n            this.sessions = [...new Set([].concat.apply([], sessions))];\n            if (this.editExam) {\n                this.levels.filter(item => item.id == this.editExam.class.substring(0, 1)).map(item => item.id);\n                this.form.get(\"levels\").setValue(this.levels.filter(item => item.id == this.editExam.class.substring(0, 1)).map(item => item.id));\n                this.onChangeLavel(this.levels.filter(item => item.id == this.editExam.class.substring(0, 1)));\n            }\n        })\n        if (this.editExam) {\n            this.teacherService.getUpByTeachers(this.editExam.teachersNames).subscribe(items => {\n                this.form.get(\"up\").setValue(items);\n                this.disabledTeacher = false;\n                let arg = { ups: items, effectDate: this.editExam.examDate, hour: this.editExam.examHour.replace(\"H:\", \"\") };\n                this.teacherService.getTeachersByUps(arg).subscribe(teachers => {\n                    this.teachers = this.editExam.teachersC.concat(teachers);\n                })\n            });\n            this.roomService.getBlocByRooms(this.editExam.roomsNames).subscribe(items => {\n                this.form.get(\"bloc\").setValue(items);\n                this.disabledRoom = false;\n                let arg = { blocs: items, effectDate: this.editExam.examDate, hour: this.editExam.examHour.replace(\"H:\", \"\") };\n                this.roomService.getRoomsByBlocs(arg).subscribe(rooms => {\n                    this.rooms = this.editExam.roomsC.concat(rooms);\n                })\n            });\n            this.onChangeSession(this.editExam.sessionT);\n            let date = this.datePipe.transform(this.editExam.examDate.toLocaleString().substring(0, 10), \"yyyy-MM-dd\");\n            this.form.patchValue({\n                session: this.editExam.sessionT,\n                module: this.editExam.moduleI,\n                classes: [this.editExam.classC.classId],\n                teachers: this.editExam.teachersC.map(item => item.teacherId),\n                examDate: date,\n                examHour: this.editExam.examHour.replace(\"H\", \"\"),\n                examDuration: this.editExam.examDuration.replace(\" min\", \"\"),\n                rooms: this.editExam.roomsC.map(item => item.classRoomId)\n            })\n            if (this.form.get(\"examDate\").value && this.form.get(\"examHour\").value && this.form.get(\"examDuration\").value) {\n                let form = Object.assign(this.form.value);\n                const examHour = +form.examHour.replace(':', '');\n                const hour = String((form.examDuration / 60).toString().split('.')[0]);\n                const min = String(form.examDuration % 60);\n                const result = examHour + (+hour.concat(min === \"0\" ? \"00\" : min));\n                this.endHourExam = result.toString().substring(0, 2) + \"H:\" + result.toString().substring(2, 4);\n                this.disabled = false;\n            }\n        }\n    }\n\n    public onScrollToEndClasses() {\n        this.fetchMoreClasses();\n    }\n\n    public onScrollClasses({ end }) {\n        if (this.loadingClasses || this.classes.length <= this.classesBuffer.length) {\n            return;\n        }\n\n        if (end + this.numberOfItemsFromEndBeforeFetchingMore >= this.classesBuffer.length) {\n            this.fetchMoreClasses();\n        }\n    }\n\n    private fetchMoreClasses() {\n        const len = this.classesBuffer.length;\n        const more = this.classes.slice(len, this.bufferSize + len);\n        this.loadingClasses = true;\n        setTimeout(() => {\n            this.loadingClasses = false;\n            this.classesBuffer = this.classesBuffer.concat(more);\n        }, 200)\n    }\n\n    public onScrollToEndModules() {\n        this.fetchMoreModules();\n    }\n\n    public onScrollModules({ end }) {\n        if (this.loadingModules || this.totalItemsModule <= this.modulesBuffer.length) {\n            return;\n        }\n        if (end + this.numberOfItemsFromEndBeforeFetchingMore >= this.modulesBuffer.length) {\n            this.fetchMoreModules();\n        }\n    }\n\n    private fetchMoreModules() {\n        const len = this.modulesBuffer.length;\n        const more = this.modules.slice(len, this.bufferSize + len);\n        this.loadingModules = true;\n        setTimeout(() => {\n            this.loadingModules = false;\n            this.modulesBuffer = this.modulesBuffer.concat(more);\n        }, 200)\n    }\n\n    public setIsSaved(event) {\n        if (event.isSaved === true) {\n            this.showLoaderSuccess = true;\n            this.saveSuccess = \"L'épreuve est ajouté avec succès\";\n            timer(1000).subscribe(() => this.reset());\n        } else {\n            if (event.code === 703) {\n                this.showLoaderError = true;\n                this.saveError = \"Le nombre des salles est insuffisant\";\n                timer(3000).subscribe(() => this.showLoaderError = false);\n            } else if (event.code === 704) {\n                this.showLoaderError = true;\n                this.saveError = \"Le nombre des enseignant est insuffisant\";\n                timer(3000).subscribe(() => this.showLoaderError = false);\n            } else if (event.code === 705) {\n                this.showLoaderError = true;\n                this.saveError = \"La module seléctionnée déja existe dans cette session\";\n                timer(3000).subscribe(() => this.showLoaderError = false);\n            }\n        }\n    }\n\n    public save() {\n        if (this.form.valid) {\n            let arg = Object.assign(this.form.value);\n            arg.examHour = +arg.examHour.toString().replace(\":\", \"\");\n            let dataValue: DataValue = { action: ActionEnum.CREATE, value: arg };\n            this.triggerSave.emit(dataValue);\n        }\n    }\n\n    public update() {\n        if (this.form.valid) {\n            let arg = this.form.value;\n            arg.examId = this.editExam.examId;\n            arg.examHour = +arg.examHour.toString().replace(\":\", \"\");\n            let dataValue: DataValue = { action: ActionEnum.UPDATE, value: arg };\n            this.triggerSave.emit(dataValue);\n        }\n    }\n\n    public onChangeModule(event) {\n        if (this.form.get(\"module\").value) {\n            this.classService.getClassesByModule(this.form.get(\"module\").value).subscribe(items => {\n                this.classes = items;\n            })\n        }\n    }\n\n    public onChangeClass(event) {\n        let classes = this.form.get(\"classes\").value\n        this.selectedClassesLenght = classes.length;\n    }\n\n    public onRemoveClass(event) {\n        this.form.get(\"rooms\").setValue(null);\n        this.form.get(\"teachers\").setValue(null);\n    }\n\n    public onClearClass(event) {\n        this.form.get(\"rooms\").setValue(null);\n        this.form.get(\"teachers\").setValue(null);\n    }\n\n    public onChangeDate(event) {\n        if (this.form.get(\"examDate\").value && this.form.get(\"examHour\").value && this.form.get(\"examDuration\").value) {\n            this.disabled = false;\n        } else {\n            this.disabled = true;\n        }\n    }\n\n    public onChangeHour(event) {\n        if (this.form.get(\"examDate\").value && this.form.get(\"examHour\").value && this.form.get(\"examDuration\").value) {\n            this.disabled = false;\n        } else {\n            this.disabled = true;\n        }\n    }\n\n    public onChangeDuration(event) {\n        if (this.form.get(\"examDate\").value && this.form.get(\"examHour\").value && this.form.get(\"examDuration\").value) {\n            let form = Object.assign(this.form.value);\n            const examHour = +form.examHour.replace(':', '');\n            const hour = String((form.examDuration / 60).toString().split('.')[0]);\n            const min = String(form.examDuration % 60);\n            const result = examHour + (+hour.concat(min === \"0\" ? \"00\" : min));\n            this.endHourExam = result.toString().substring(0, 2) + \"H:\" + result.toString().substring(2, 4);\n            this.disabled = false;\n        } else {\n            this.disabled = true;\n            this.endHourExam = null;\n        }\n    }\n\n    public onChangeBoc(event) {\n        this.onClearBloc(event);\n    }\n\n    public onRemoveBloc(event) {\n        this.onClearBloc(event);\n    }\n\n    public onClearBloc(event) {\n        let examHour = +this.form.get(\"examHour\").value.replace(\":\", \"\");\n        let arg = { blocs: this.form.get(\"bloc\").value, effectDate: this.form.get(\"examDate\").value, hour: examHour };\n        this.roomService.getRoomsByBlocs(arg).subscribe(rooms => {\n            this.rooms = rooms;\n            this.form.get(\"rooms\").setValue(null);\n            if (this.rooms.length > 0) {\n                this.disabledRoom = false;\n            } else {\n                this.disabledRoom = true;\n            }\n        });\n    }\n\n    public onChangeDepartmenet(event) {\n        this.onClearDepartmenet(event);\n    }\n\n    public onRemoveDepartmenet(event) {\n        this.onClearDepartmenet(event);\n    }\n\n    public onClearDepartmenet(event) {\n        let examHour = +this.form.get(\"examHour\").value.replace(\":\", \"\");\n        let arg = { ups: this.form.get(\"up\").value, effectDate: this.form.get(\"examDate\").value, hour: examHour };\n        this.teacherService.getTeachersByUps(arg).subscribe(teachers => {\n            this.teachers = teachers;\n            this.form.get(\"teachers\").setValue(null);\n            if (this.teachers && this.teachers.length > 0) {\n                this.disabledTeacher = false;\n            } else {\n                this.disabledTeacher = true;\n            }\n        });\n    }\n\n    public onChangeLavel(event) {\n        if (event) {\n            this.spinner.show();\n            this.classService.getClasses().subscribe(classes => {\n                let indexLevel = event.map(item => item.label.charAt(0));\n                this.classes = classes.filter(el => indexLevel.some(item => item === el.classId.charAt(0)));\n                this.classesBuffer = this.classes.slice(0, this.bufferSize);\n                this.disabledClass = false;\n            })\n            this.moduleService.getModulesByLevel(event.map(item => item.label.charAt(0))).subscribe((data: any) => {\n                this.modules = data.body;\n                this.totalItemsModule = data.totalItems;\n                this.modulesBuffer = this.modules.slice(0, this.bufferSize);\n                this.spinner.hide();\n            })\n            if (event.every(item => item.id < 5)) {\n                let level = this.levels.find(level => level.id === 1);\n                if (level) {\n                    this.sessions = level.session;\n                    let disabledLevel = this.levels.find(level => level.id === 5);\n                    if (disabledLevel && disabledLevel.disabled === false) {\n                        disabledLevel.disabled = true;\n                        this.levels = [...this.levels];\n                    }\n                }\n            } else {\n                let level = this.levels.find(level => level.id === 5);\n                if (level) {\n                    this.sessions = level.session;\n                    let disabledLevels = this.levels.filter(level => level.id < 5);\n                    if (disabledLevels.length > 0) {\n                        disabledLevels.forEach(item => item.disabled = true);\n                        this.levels = [...this.levels];\n                    }\n                }\n            }\n        } else {\n            this.onClearLavel();\n        }\n    }\n\n    public onRemoveLavel() {\n        this.disabledClass = true;\n        if (this.form.get(\"levels\").value && this.form.get(\"levels\").value.length > 0) {\n            if (this.form.get(\"levels\").value.every(item => item.id < 5)) {\n                let level = this.levels.find(level => level.id === 1);\n                this.sessions = level.session;\n                let disabledLevel = this.levels.find(level => level.id === 5);\n                if (disabledLevel.disabled === false) {\n                    disabledLevel.disabled = true;\n                    this.levels = [...this.levels];\n                }\n            }\n        } else {\n            this.onClearLavel();\n        }\n    }\n\n    public onClearLavel() {\n        this.refService.getLevels().subscribe(levels => {\n            this.form.get(\"session\").setValue(null);\n            this.levels = levels;\n            let sessions: any[] = [];\n            this.levels.forEach(level => sessions.push(level.session));\n            this.sessions = [...new Set([].concat.apply([], sessions))];\n        });\n    }\n\n    public onChangeSession(event) {\n        if (event) {\n            this.refService.getLevels().subscribe(levels => {\n                let result = levels.filter(level => level.session.some(item => item === event));\n                this.levels = result;\n            })\n        } else {\n            this.refService.getLevels().subscribe(levels => {\n                this.form.get(\"levels\").setValue(null);\n                this.levels = levels;\n                let sessions: any[] = [];\n                this.levels.forEach(level => sessions.push(level.session));\n                this.sessions = [...new Set([].concat.apply([], sessions))];\n            })\n        }\n    }\n\n    public reset() {\n        this.form.reset();\n        this.closeModal();\n    }\n\n    public closeModal(): void {\n        this.activeModal.close();\n    }\n\n    private initForm(): void {\n        this.form = this.fb.group({\n            levels: [null, Validators.required],\n            session: [null, Validators.required],\n            module: [null, Validators.required],\n            classes: [null, Validators.required],\n            teachers: [null],\n            examDate: [null, Validators.required],\n            examHour: [null, Validators.required],\n            examDuration: [null, Validators.required],\n            rooms: [null],\n            bloc: [null, Validators.required],\n            up: [null, Validators.required]\n        })\n    }\n\n}","<div class=\"modal-header mt-3\">\n    <h2 *ngIf=\"!editExam\" class=\"h3 modal-title text-center font-size-24 bold\" style=\"width: 100%;\">Ajouter un épreuve\n    </h2>\n    <h2 *ngIf=\"editExam\" class=\"h3 modal-title text-center font-size-24 bold\" style=\"width: 100%;\">Modifier un épreuve\n    </h2>\n    <span class=\"close\" aria-label=\"Close\" data-dismiss=\"modal\" (click)=\"closeModal()\" style=\"cursor: pointer;\">\n        <span aria-hidden=\"true\">&times;</span>\n    </span>\n</div>\n\n<form [formGroup]=\"form\">\n    <div *ngIf=\"showLoaderError\" class=\"alert alert-error alert-icon alert-dismissible width-450\" role=\"alert\"\n        style=\"margin-left: auto; margin-right: auto;\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n        </button>\n        <i class=\"icons icon-alert color-white\" aria-hidden=\"true\"></i>\n        {{saveError}}\n    </div>\n    <div *ngIf=\"showLoaderSuccess\" class=\"alert alert-valid alert-icon alert-dismissible width-450\" role=\"alert\"\n        style=\"margin-left: auto; margin-right: auto;\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n        </button>\n        <i class=\"icons icon-arrow_circle_down color-white\" aria-hidden=\"true\"></i>\n        {{saveSuccess}}\n    </div>\n\n    <div class=\"modal-body pb-0\">\n        <div class=\"row pt-1\">\n            <div class=\"col-12 px-0\">\n\n                <div class=\"row\" style=\"padding-right: 5%;\">\n                    <div class=\"col-2 py-2 px-0\">\n                        <label class=\"float-right\">Niveaux : <span class=\"color-error\">*</span></label>\n                    </div>\n                    <div class=\"col-4 pr-0\">\n                        <ng-select [items]=\"levels\" formControlName=\"levels\" bindLabel=\"label\" bindValue=\"id\"\n                            [multiple]=\"true\" [hideSelected]=\"true\" (change)=\"onChangeLavel($event)\"\n                            (remove)=\"onRemoveLavel()\" (clear)=\"onClearLavel()\">\n                        </ng-select>\n                    </div>\n                    <div class=\"col-2 py-2\">\n                        <label class=\"float-right\">Session : <span class=\"color-error\">*</span></label>\n                    </div>\n                    <div class=\"col-4 pl-0\">\n                        <ng-select [items]=\"sessions\" formControlName=\"session\" (change)=\"onChangeSession($event)\">\n                        </ng-select>\n                    </div>\n                </div>\n\n                <div class=\"row\" style=\"padding-right: 5%;\">\n                    <div class=\"col-2 py-2 px-0\">\n                        <label class=\"float-right\">Date examen : <span class=\"color-error\">*</span></label>\n                    </div>\n                    <div class=\"col-4 pr-0\">\n                        <input type=\"date\" formControlName=\"examDate\" (change)=\"onChangeDate($event)\">\n                    </div>\n                    <div class=\"col-2 py-2\">\n                        <label class=\"float-right\">Heure début examen : <span class=\"color-error\">*</span></label>\n                    </div>\n                    <div class=\"col-4 pl-0\">\n                        <input type=\"time\" formControlName=\"examHour\" style=\"width: 100%;\"\n                            (input)=\"onChangeHour($event)\">\n                    </div>\n                </div>\n\n                <div class=\"row\" style=\"padding-right: 5%;\">\n                    <div class=\"col-2 py-2 px-0\">\n                        <label class=\"float-right\">Durée examen : <span class=\"color-error\">*</span></label>\n                    </div>\n                    <div class=\"col-4 pr-0\">\n                        <input type=\"number\" formControlName=\"examDuration\" style=\"width: 100%;\"\n                            (change)=\"onChangeDuration($event)\" (input)=\"onChangeDuration($event)\">\n                    </div>\n                    <div class=\"col-2 py-2\">\n                        <label class=\"float-right\">Heure fin examen : </label>\n                    </div>\n                    <div class=\"col-4 pl-0\">\n                        <input type=\"text\" [(ngModel)]=\"endHourExam\" [ngModelOptions]=\"{standalone: true}\"\n                            [disabled]=\"true\">\n                    </div>\n                </div>\n\n                <div class=\"row\" style=\"padding-right: 5%;\">\n                    <div class=\"col-2 py-2 px-0\">\n                        <label class=\"float-right\">Modules : <span class=\"color-error\">*</span></label>\n                    </div>\n                    <div class=\"col-4 pr-0\">\n                        <ng-select [items]=\"modulesBuffer\" formControlName=\"module\" bindLabel=\"moduleId\"\n                            bindValue=\"moduleId\" [virtualScroll]=\"true\" [loading]=\"loadingModules\"\n                            (scroll)=\"onScrollModules($event)\" (change)=\"onChangeModule($event)\"\n                            (scrollToEnd)=\"onScrollToEndModules()\" [closeOnSelect]=\"false\">\n                            <ng-template ng-header-tmp>\n                                <small class=\"form-text text-muted\">Chargé {{modulesBuffer.length}} sur\n                                    {{totalItemsModule}}</small>\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                    <div class=\"col-2 py-2\">\n                        <label class=\"float-right\">Classes :<span class=\"color-error\">*</span> </label>\n                    </div>\n                    <div class=\"col-4 pl-0\">\n                        <ng-select [items]=\"classesBuffer\" formControlName=\"classes\" [multiple]=\"true\"\n                            bindLabel=\"classId\" bindValue=\"classId\" groupBy=\"category\" [virtualScroll]=\"true\"\n                            [loading]=\"loadingClasses\" (scroll)=\"onScrollClasses($event)\"\n                            (scrollToEnd)=\"onScrollToEndClasses()\" [closeOnSelect]=\"false\" [selectableGroup]=\"true\"\n                            [selectableGroupAsModel]=\"false\" (change)=\"onChangeClass($event)\"\n                            (remove)=\"onRemoveClass($event)\" (clear)=\"onClearClass($event)\" [readonly]=\"disabledClass\">\n                            <ng-template ng-header-tmp>\n                                <small class=\"form-text text-muted\">Chargé {{classesBuffer.length}} sur\n                                    {{classes.length}}</small>\n                            </ng-template>\n                            <ng-template ng-multi-label-tmp let-items=\"items\">\n                                {{items.length}} classes séléctionnées\n                            </ng-template>\n                            <ng-template ng-optgroup-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"height: auto;\">\n                                {{item.category}}\n                            </ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"height: auto;\">\n                                {{item.classId}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                </div>\n\n                <div class=\"row\" style=\"padding-right: 5%;\">\n                    <div class=\"col-2 py-2 px-0\">\n                        <label class=\"float-right\">Bloc : <span class=\"color-error\">*</span></label>\n                    </div>\n                    <div class=\"col-4 pr-0\">\n                        <ng-select [items]=\"blocs$ | async\" formControlName=\"bloc\" bindLabel=\"label\" bindValue=\"pole\"\n                            groupBy=\"blocs\" [closeOnSelect]=\"false\" [selectableGroup]=\"true\"\n                            [selectableGroupAsModel]=\"false\" (change)=\"onChangeBoc($event)\"\n                            (remove)=\"onRemoveBloc($event)\" (clear)=\"onClearBloc($event)\" [readonly]=\"disabled\"\n                            [multiple]=\"true\">\n                            <ng-template ng-multi-label-tmp let-items=\"items\">\n                                {{items.length}} blocs séléctionnées\n                            </ng-template>\n                            <ng-template ng-optgroup-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"height: auto;\">\n                                {{item.label}}\n                            </ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"height: auto;\">\n                                {{item}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                    <div class=\"col-2 py-2\">\n                        <label class=\"float-right\">Salles : </label>\n                    </div>\n                    <div class=\"col-4 pl-0\">\n                        <ng-select [items]=\"rooms\" formControlName=\"rooms\" [multiple]=\"true\" bindLabel=\"classRoomId\"\n                            bindValue=\"classRoomId\" [readonly]=\"disabledRoom\">\n                            <ng-template ng-multi-label-tmp let-items=\"items\">\n                                {{items.length}} salles séléctionnées\n                            </ng-template>`\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"height: auto;\">\n                                {{item.classRoomId}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                </div>\n\n                <div class=\"row\" style=\"padding-right: 5%;\">\n                    <div class=\"col-2 py-2 px-0\">\n                        <label class=\"float-right\">UP : <span class=\"color-error\">*</span></label>\n                    </div>\n                    <div class=\"col-4 pr-0\">\n                        <ng-select [items]=\"department$ | async\" formControlName=\"up\" bindLabel=\"label\"\n                            bindValue=\"departmenetId\" groupBy=\"up\" [closeOnSelect]=\"false\" [selectableGroup]=\"true\"\n                            [selectableGroupAsModel]=\"false\" (change)=\"onChangeDepartmenet($event)\"\n                            (remove)=\"onRemoveDepartmenet($event)\" (clear)=\"onClearDepartmenet($event)\"\n                            [readonly]=\"disabled\" [multiple]=\"true\">\n                            <ng-template ng-multi-label-tmp let-items=\"items\">\n                                {{items.length}} up séléctionnées\n                            </ng-template>\n                            <ng-template ng-optgroup-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"height: auto;\">\n                                {{item.label}}\n                            </ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"height: auto;\">\n                                {{item}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                    <div class=\"col-2 py-2\">\n                        <label class=\"float-right\">Enseigants : </label>\n                    </div>\n                    <div class=\"col-4 pl-0\">\n                        <ng-select [items]=\"teachers\" formControlName=\"teachers\" [multiple]=\"true\" bindLabel=\"fullName\"\n                            bindValue=\"teacherId\" [readonly]=\"disabledTeacher\">\n                            <ng-template ng-multi-label-tmp let-items=\"items\">\n                                {{items.length}} enseigants séléctionnées\n                            </ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [ngModel]=\"item$.selected\"\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"height: auto;\">\n                                {{item.fullName}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"reset()\">Annuler</button>\n        <button type=\"button\" class=\"btn btn-bg-primary\" (click)=\"editExam ? update() : save()\"\n            [disabled]=\"!form.valid\">Confirmer</button>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { ExamsComponent } from './exams.component';\nimport { ExamModalComponent } from './exam-modal/exam-modal.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from 'src/app/shared';\n\nconst routes: Routes = [\n    { path: '', component: ExamsComponent }\n];\n\nconst MODULE_COMPONENT = [\n    ExamsComponent,\n    ExamModalComponent\n];\n\n@NgModule({\n    declarations: MODULE_COMPONENT,\n    imports: [RouterModule.forChild(routes), SharedModule],\n    entryComponents: [\n        ExamModalComponent\n    ]\n})\nexport class ExamsModule { }"],"sourceRoot":"webpack:///"}